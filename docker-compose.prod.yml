version: "3.5"

services:
  hyungmin_college:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: hyungmin-college:latest
    env_file:
      - .env
    ports:
      - "${APP_PORT}:3000"
    restart: unless-stopped
    depends_on:
      - hyungmin_db
      - hyungmin_redis
    networks:
      - hyungmin_network
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${APP_PORT}/api/v1/health/database",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  hyungmin_db:
    image: mongo:latest
    container_name: "hyungmin_db"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - "mongodb_data:/data/db"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongo --username ${MONGODB_USERNAME} --password ${MONGODB_PASSWORD} --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hyungmin_network

  hyungmin_adminer:
    image: adminer:latest
    container_name: hyungmin_adminer
    ports:
      - "8080:8080"
    networks:
      - hyungmin_network
    depends_on:
      hyungmin_db:
        condition: service_healthy
    restart: unless-stopped

  hyungmin_redis:
    image: "redis:latest"
    container_name: "hyungmin_redis"
    command: >
      --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - "redis_data:/data"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - REDIS_IO_THREADS=4
      - REDIS_IO_THREADS_DO_READS=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hyungmin_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: "hyungmin_redis_commander"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_HOSTS=local:${REDIS_PORT}
      - HTTP_USER=${REDIS_USERNAME}
      - HTTP_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - hyungmin_network
    depends_on:
      - hyungmin_redis

volumes:
  mongodb_data:
  redis_data:

networks:
  hyungmin_network:
    driver: bridge
